{"version":3,"sources":["components/Section/FeedbackOptions/Button/Button.module.css","components/Section/Section.js","components/Section/Statistic/Statistic.js","components/Section/FeedbackOptions/Button/button.js","components/Section/FeedbackOptions/FeedbackOptions.js","components/Section/Notification/Notification.js","App.js","index.js","App.module.css"],"names":["module","exports","Section","title","children","defaultProps","Statistic","good","neutral","bad","total","positivePercentage","protoTypes","ProtoTypes","number","isRequired","Button","action","type","className","s","button","onClick","toUpperCase","string","func","FeedbackOptions","options","onLeaveFeedback","items","Object","keys","map","item","Notification","message","App","state","onClickBtn","e","eventItemName","target","textContent","setState","prevState","toLowerCase","countTotalFeedback","values","reduce","countPositiveFeedbackPercentage","Math","trunc","this","percent","blocks","Component","ReactDom","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,OAAS,yB,sJCErBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,6BAAKD,IACJC,MAILF,EAAQG,aAAe,CACrBF,MAAO,yBAMMD,Q,gBCdTI,EAAY,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC9C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YAKNL,EAAUM,WAAa,CACrBL,KAAMM,IAAWC,OAAOC,WACxBP,QAASK,IAAWC,OAAOC,WAC3BN,IAAKI,IAAWC,OAAOC,WACvBL,MAAOG,IAAWC,OAAOC,WACzBJ,mBAAoBE,IAAWC,OAAOC,YAEzBT,Q,iBCjBTU,EAAS,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAOc,EAAV,EAAUA,OAAV,OACb,wBAAQC,KAAK,SAASC,UAAWC,IAAEC,OAAQC,QAASL,EAApD,SACGd,EAAMoB,iBAIXP,EAAOJ,WAAa,CAClBT,MAAOU,IAAWW,OAAOT,WACzBE,OAAQJ,IAAWY,KAAKV,YAGXC,QCIAU,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAQC,OAAOC,KAAKJ,GAC1B,OACE,8BACGE,EAAMG,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAQ9B,MAAO8B,EAAiBhB,OAAQW,GAAdK,SCN5BC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KAGdD,EAAatB,WAAa,CACxBuB,QAAStB,IAAWW,OAAOT,YAEdmB,QC8DAE,E,4MA/DbC,MAAQ,CACN9B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP6B,WAAa,SAAAC,GACX,IAAMC,EAAgBD,EAAEE,OAAOC,YAC/B,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,eAGKJ,EAAcK,cACbD,EAAUJ,EAAcK,eAAiB,Q,EAMnDC,mBAAqB,WAKnB,OAJuBhB,OAAOiB,OAAO,EAAKV,OACLW,QAAO,SAACtC,EAAOuB,GAClD,OAAOvB,EAAQuB,IACd,I,EAILgB,gCAAkC,SAAAvC,GAChC,OAAiB,IAAVA,EAAc,EAAIwC,KAAKC,MAAyB,IAAlB,EAAKd,MAAM9B,KAAcG,I,4CAGhE,WAAU,IAAD,EACwB0C,KAAKf,MAA5B9B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ0C,KAAKN,qBACbO,EAAUD,KAAKH,gCAAgCvC,GAErD,OACE,sBAAKS,UAAWC,IAAEkC,OAAlB,UACE,cAAC,EAAD,CAASnD,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEwB,QAASyB,KAAKf,MACdT,gBAAiBwB,KAAKd,eAI1B,cAAC,EAAD,CAASnC,MAAO,YAAhB,SACa,IAAVO,EACC,cAAC,EAAD,CAAcyB,QAAQ,sBAEtB,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB0C,a,GAvDhBE,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B5D,EAAOC,QAAU,CAAC,OAAS,oBAAoB,MAAQ,sB","file":"static/js/main.3278a5ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3BohG\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n    <h2>{title}</h2>\n    {children}\n  </>\n);\n\nSection.defaultProps = {\n  title: 'Please Leave Feedback',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\nexport default Section;\n","import React from 'react';\nimport ProtoTypes, { number } from 'prop-types';\n\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive Feedback: {positivePercentage} %</p>\n    </div>\n  );\n};\n\nStatistic.protoTypes = {\n  good: ProtoTypes.number.isRequired,\n  neutral: ProtoTypes.number.isRequired,\n  bad: ProtoTypes.number.isRequired,\n  total: ProtoTypes.number.isRequired,\n  positivePercentage: ProtoTypes.number.isRequired,\n};\nexport default Statistic;\n","import React from 'react';\nimport ProtoTypes from 'prop-types';\n\nimport s from './Button.module.css';\n\nconst Button = ({ title, action }) => (\n  <button type=\"button\" className={s.button} onClick={action}>\n    {title.toUpperCase()}\n  </button>\n);\n\nButton.protoTypes = {\n  title: ProtoTypes.string.isRequired,\n  action: ProtoTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from '../FeedbackOptions/Button/button';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const items = Object.keys(options);\n  return (\n    <div>\n      {items.map(item => (\n        <Button title={item} key={item} action={onLeaveFeedback} />\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport ProtoTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h3>{message}</h3>;\n};\n\nNotification.protoTypes = {\n  message: ProtoTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\n\nimport s from './App.module.css';\nimport Section from './components/Section';\nimport Statistic from './components/Section/Statistic';\nimport FeedbackOptions from './components/Section/FeedbackOptions';\nimport Notification from './components/Section/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onClickBtn = e => {\n    const eventItemName = e.target.textContent;\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        ...{\n          [eventItemName.toLowerCase()]:\n            prevState[eventItemName.toLowerCase()] + 1,\n        },\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const arrayFeedbacks = Object.values(this.state);\n    const totalFeedback = arrayFeedbacks.reduce((total, item) => {\n      return total + item;\n    }, 0);\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    return total === 0 ? 0 : Math.trunc((this.state.good * 100) / total);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percent = this.countPositiveFeedbackPercentage(total);\n\n    return (\n      <div className={s.blocks}>\n        <Section title={'Please Leave Feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onClickBtn}\n          />\n        </Section>\n\n        <Section title={'Statistic'}>\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percent}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App.js';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blocks\":\"App_blocks__mms9t\",\"title\":\"App_title__-GfWs\"};"],"sourceRoot":""}